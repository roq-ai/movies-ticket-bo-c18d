generator client {
  provider = "prisma-client-js"
  previewFeatures = ["clientExtensions", "postgresqlExtensions"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
  extensions      = [pgcrypto]
}

model booking {
  id           String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  user_id      String   @db.Uuid
  show_id      String   @db.Uuid
  booking_time DateTime @db.Timestamp(6)
  total_seats  Int
  total_price  Int
  created_at   DateTime @default(now()) @db.Timestamp(6)
  updated_at   DateTime @default(now()) @db.Timestamp(6)
  show         show     @relation(fields: [show_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  user         user     @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  ticket       ticket[]
}

model cinema {
  id           String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  description  String?   @db.VarChar(255)
  location     String?   @db.VarChar(255)
  total_seats  Int?
  opening_time DateTime? @db.Timestamp(6)
  closing_time DateTime? @db.Timestamp(6)
  name         String    @db.VarChar(255)
  created_at   DateTime  @default(now()) @db.Timestamp(6)
  updated_at   DateTime  @default(now()) @db.Timestamp(6)
  user_id      String    @db.Uuid
  tenant_id    String    @db.VarChar(255)
  user         user      @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  show         show[]
}

model movie {
  id           String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  title        String   @db.VarChar(255)
  director     String   @db.VarChar(255)
  genre        String   @db.VarChar(255)
  duration     Int
  rating       Int
  release_date DateTime @db.Timestamp(6)
  created_at   DateTime @default(now()) @db.Timestamp(6)
  updated_at   DateTime @default(now()) @db.Timestamp(6)
  show         show[]
}

model show {
  id              String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  movie_id        String    @db.Uuid
  cinema_id       String    @db.Uuid
  show_time       DateTime  @db.Timestamp(6)
  seat_price      Int
  available_seats Int
  created_at      DateTime  @default(now()) @db.Timestamp(6)
  updated_at      DateTime  @default(now()) @db.Timestamp(6)
  booking         booking[]
  cinema          cinema    @relation(fields: [cinema_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  movie           movie     @relation(fields: [movie_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model ticket {
  id          String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  booking_id  String   @db.Uuid
  seat_number Int
  price       Int
  created_at  DateTime @default(now()) @db.Timestamp(6)
  updated_at  DateTime @default(now()) @db.Timestamp(6)
  booking     booking  @relation(fields: [booking_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model user {
  id          String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  email       String    @unique @db.VarChar(255)
  firstName   String?   @db.VarChar(255)
  lastName    String?   @db.VarChar(255)
  roq_user_id String    @db.VarChar(255)
  tenant_id   String    @db.VarChar(255)
  created_at  DateTime  @default(now()) @db.Timestamp(6)
  updated_at  DateTime  @default(now()) @db.Timestamp(6)
  booking     booking[]
  cinema      cinema[]
}
